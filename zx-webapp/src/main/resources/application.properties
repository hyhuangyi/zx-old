##配置
spring.profiles.active=prod
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8

##文件上传
#默认支持文件上传.
spring.http.multipart.enabled=true
#支持文件写入磁盘.
spring.http.multipart.file-size-threshold=0
# 最大支持文件大小
spring.http.multipart.max-file-size=20MB
# 最大支持请求大小
spring.http.multipart.max-request-size=20MB

##thymeleaf模板
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML5

##logback配置
logging.config=classpath:logback-spring.xml
#开启mapper sql打印
logging.level.cn.common.dao=debug

##druid配置
# 初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
# 最大连接池数量
spring.datasource.druid.max-active=30
# 最小连接池数量
spring.datasource.druid.min-idle=5
# 获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=50
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计
spring.datasource.druid.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true

#mybatis和通用mapper配置
mybatis.config-location=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:mapper/**.xml
#扫描这个包,并给实体类的类 起别名 默认 类的名字 首字母小写
mybatis.type-aliases-package=cn.common.entity
mapper.identity=MYSQL
mapper.not-empty=false
#mappers 多个接口时逗号隔开
mapper.mappers=cn.common.dao.base.IBaseMapper

##线程池配置
spring.task.pool.corePoolSize=5
spring.task.pool.maxPoolSize=20
spring.task.pool.keepAliveSeconds=200
spring.task.pool.queueCapacity=20

##OSS
aliyun.accessKeyId= LTAIEPTYQq08Ztra
aliyun.accessKeySecret= YPZPwAdAuSY46MJL2cnuzP0bBHjPm9
aliyun.oss.endpoint= http://oss-cn-hangzhou.aliyuncs.com/
aliyun.oss.bucketName=qsj-u3dfiles

##邮箱配置
spring.mail.host=smtp.qq.com
spring.mail.username=597505910@qq.com
spring.mail.password=vwjwqsoqbvkmbccd
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

##Actuator监控配置
#在1.5.x版本中通过management.security.enabled=false来暴露所有端点
management.security.enabled=false
#前缀
management.context-path=/comm

#swagger-ui是通过获取接口的json数据渲染页面的,即通过swagger的注解将生成接口
#的描述服务,默认地址为/v2/api-docs,如果需要改变这个请求地址，可以在properties
#中配置springfox.documentation.swagger.v2.path。
springfox.documentation.swagger.v2.path = /swagger





